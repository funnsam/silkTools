IMM R14 1
IMM R12 .GetInput
//create base of list
IMM R1 16
MOV R2 R1 //R2 is size
SCAL MALLOC R1 //R1 is address
MOV R3 R0 //R3 is offset
//if R2 == R3 then realloc
IMM R4 16
SCAL MALLOC R4 //text input
SUB R6 R0 R14 //last line
PSH R0
.GetInput
IMM R5 '\n'
PSH R5
IMM R5 16
PSH R5
SCAL GETS R4
SCAL PUTCI '\n'
//get lines
MOV R10 R4
IMM R13 .Operation
//R5 is start
//R6 is end
LOD R7 R4
IMM R8 .Full
IMM R9 ','
BRE R8 R7 R9

IMM R5 .SkipNumb
IMM R11 '/'
BGE R5 R11 R7
IMM R5 .NumbEnd
IMM R11 ':'
ADD R6 R6 R14
BGE R5 R7 R11
SUB R6 R6 R14
MOV R6 R0
IMM R13 .NumbLoop
.NumbLoop
IMM R11 0x30
SUB R7 R7 R11
ADD R6 R6 R7
ADD R4 R4 R14
LOD R7 R4
IMM R11 '/'
BGE R5 R11 R7
IMM R11 ':'
BGE R5 R7 R11
IMM R11 3
BSL R8 R3 R11
BSL R3 R3 R14
ADD R3 R3 R8
BGE R13 R0 R0
.NumbEnd
SUB R6 R6 R14
.SkipNumb
MOV R5 R6
//get operation
.Operation
LOD R7 R4
MOV R4 R10

IMM R8 .Print
IMM R9 'p'
BRE R8 R7 R9
IMM R8 .Quit
IMM R9 'q'
BRE R8 R7 R9
IMM R8 .ForceQuit
IMM R9 'Q'
BRE R8 R7 R9
IMM R8 .Read
IMM R9 'r'
BRE R8 R7 R9
IMM R8 .Write
IMM R9 'w'
BRE R8 R7 R9
IMM R8 .Change
IMM R9 'c'
BRE R8 R7 R9
IMM R8 .Append
IMM R9 'a'
BRE R8 R7 R9
IMM R8 .Delete
IMM R9 'd'
BRE R8 R7 R9
SCAL PUTCI '?'
SCAL PUTCI '\n'
BGE R12 R0 R0

.Full
MOV R5 R0
MOV R6 R3
SUB R6 R6 R14
ADD R4 R4 R14
BGE R13 R0 R0

.Print
ADD R5 R5 R1
ADD R7 R6 R1
ADD R7 R7 R14
IMM R11 .PrintLoop
.PrintLoop
BGE R12 R5 R7
LOD R8 R5
SCAL PUTS R8
SCAL PUTCI '\n'
ADD R5 R5 R14
BGE R11 R0 R0

.Read
IMM R5 ' '
PSH R5
PSH R14
MOV R5 R4
SCAL NTHSTRING R5
SCAL OPEN R5

SCAL LODOSVAR ERROR
POP R11
IMM R10 .Error
BGE R10 R11 R14

//print file length

    PSH R1
    PSH R2
    PSH R3
    PSH R4
    PSH R5
    PSH R12
    SCAL FLEN R5
    POP R1
    SUB R1 R1 R14
    IMM R8 2
    IMM R9 4
    IMM R10 8
    IMM R11 0xFFFF
    IMM R12 0x30
    IMM R13 9
    IMM R7 3
    PSH R11
    .Loop
    BSR R5 R1 R14
    BSR R3 R1 R8
    ADD R3 R3 R5
    BSR R5 R3 R9
    ADD R3 R3 R5
    BSR R5 R3 R10
    ADD R3 R3 R5
    BSR R3 R3 R7
    BSL R5 R3 R8
    ADD R5 R3 R5
    BSL R5 R5 R14
    SUB R4 R1 R5
    IMM R11 .Skip
    BGE R11 R13 R4
    ADD R3 R3 R14
    .Skip
    BSL R5 R3 R7
    BSL R6 R3 R14
    ADD R5 R6 R5
    SUB R5 R1 R5
    ADD R1 R3 R0
    ADD R5 R5 R12
    PSH R5
    IMM R11 .NextStepPrep
    BRE R11 R1 R0
    IMM R11 .Loop
    BRE R11 R0 R0
    .NextStepPrep
    IMM R11 0xFFFF
    IMM R3 .NextStep
    IMM R4 .End
    .NextStep
    POP R1
    BRE R4 R1 R11
    SCAL PUTC R1
    BRE R3 R0 R0
    .End
    POP R12
    POP R5
    POP R4
    POP R3
    POP R2
    POP R1
//empty out the current file
MOV R10 R1
ADD R7 R3 R1
IMM R13 .ReadActual
IMM R11 .ClearLoop
.ClearLoop
BGE R13 R10 R7
LOD R8 R10
SCAL FREE R8
ADD R10 R10 R14
BGE R11 R0 R0
.ReadActual
MOV R6 R0 //endline
//R2 is total line count
MOV R7 R0 //endchar
IMM R3 16 //currline size
MOV R8 R3
SCAL MALLOC R8
STR R1 R8
IMM R11 .ReadLoop
PSH R1
.ReadLoop
PSH R14
PSH R8
SCAL READ R5
//check if EOF
POP R9 //amount read
POP R10
IMM R13 .ReadEnd
BRE R13 R9 R0
PSH R10
LOD R9 R8
IMM R13 .ReadNextLine
IMM R10 '\n'
BRE R13 R9 R10
ADD R8 R8 R14
ADD R7 R7 R14
IMM R13 .ReadExpandLine
SUB R3 R3 R14
BGE R13 R7 R3
ADD R3 R3 R14
BGE R11 R0 R0

.ReadNextLine
STR R8 R0
ADD R1 R1 R14
ADD R6 R6 R14
IMM R3 16
IMM R13 .ReadMoreLines
BGE R13 R6 R2
.ReadMoreLinesRet
MOV R7 R0
MOV R8 R3
SCAL MALLOC R8
STR R1 R8
BGE R11 R0 R0

.ReadExpandLine
ADD R3 R3 R14
LOD R9 R1
PSH R9
IMM R9 16
ADD R3 R3 R9
MOV R9 R3
SCAL REALLOC R9
STR R1 R9
BGE R11 R0 R0

.ReadMoreLines
ADD R2 R2 R3
MOV R1 R2
SCAL REALLOC R1 //R1 is already on the stack
PSH R1
ADD R1 R1 R6
IMM R13 .ReadMoreLinesRet
BGE R13 R0 R0

.ReadEnd
MOV R1 R10
MOV R3 R6
ADD R3 R3 R14
SCAL CLOSE R5
SCAL PUTCI '\n'
BGE R12 R0 R0

.Write
IMM R5 ' '
PSH R5
PSH R14
MOV R5 R4
SCAL NTHSTRING R5
PSH R5
SCAL OPEN R5
//check if file exists or not
SCAL LODOSVAR ERROR
POP R11
POP R6
PSH R0
SCAL STROSVAR ERROR
IMM R7 .WriteSkipCreat
BRE R7 R11 R0
MOV R7 R6
SCAL STRLEN R7
ADD R7 R6 R7 //points to null terminator
.WriteFindEndLoop
SUB R7 R7 R14
LOD R8 R7
IMM R11 .WriteShortPath
IMM R9 ' '
BRE R11 R8 R9
SUB R9 R9 R14 //'/'
IMM R11 .WriteFindEndLoopEnd
BRE R11 R8 R9
IMM R11 .WriteFindEndLoop
BGE R11 R0 R0
.WriteFindEndLoopEnd
STR R7 R0
SCAL LODOSVAR CWD
POP R9
SCAL RDIR R6
SCAL LODOSVAR ERROR
POP R10
IMM R11 .Error
BGE R11 R10 R14
SCAL CHDIR R6
ADD R5 R7 R14
SCAL CREAT R5
SCAL OPEN R5
SCAL CHDIR R9
IMM R11 .WriteSkipCreat
BGE R11 R0 R0
.WriteShortPath
ADD R5 R7 R14
SCAL CREAT R5
SCAL OPEN R5
.WriteSkipCreat
PSH R1
ADD R6 R1 R3
IMM R11 .WriteEnd
BGE R11 R1 R6
.WriteLoop
LOD R7 R1
MOV R8 R7
SCAL STRLEN R8
ADD R9 R7 R8

ADD R1 R1 R14
IMM R11 .SkipNewLine
BGE R11 R1 R6
IMM R11 '\n'
STR R9 R11
.SkipNewLine
ADD R8 R8 R14
PSH R8
PSH R7
SCAL WRITE R5
STR R9 R0
IMM R11 .WriteEnd
BGE R11 R1 R6
IMM R11 .WriteLoop
BGE R11 R0 R0
.WriteEnd
POP R1
POP R0
PSH R0
SCAL CLOSE R5
BGE R12 R0 R0

.Change
ADD R7 R6 R1
LOD R8 R7
SCAL FREE R8
IMM R9 '\n'
PSH R9
IMM R8 64
PSH R8
SCAL MALLOC R8
SCAL GETS R8
STR R7 R8
POP R0
PSH R14
SCAL PUTCI '\n'
BGE R12 R0 R0

.Append
IMM R8 '\n'
PSH R8
IMM R8 64
PSH R8
SCAL MALLOC R8
SCAL GETS R8
SCAL PUTCI '\n'
ADD R9 R8 R14
LOD R9 R9
IMM R11 .Append_NotEnd
BGE R11 R9 R14
LOD R9 R8
IMM R11 '.'
SUB R6 R6 R14
BRE R12 R9 R11
ADD R6 R6 R14
.Append_NotEnd
//R6 is end
//make space for one line
ADD R9 R1 R3
ADD R3 R3 R14
IMM R11 .Append_Expand
BRE R11 R3 R2
.Append_Expand_Ret
ADD R7 R6 R1
IMM R11 .Append_Move_Loop
ADD R9 R9 R14
.Append_Move_Loop
SUB R9 R9 R14 //move everything between R7 and R9 by 1
IMM R13 .Append_Move_End
BGE R13 R7 R9
LOD R13 R9
ADD R10 R9 R14
STR R10 R13
BGE R11 R0 R0
.Append_Move_End
ADD R7 R7 R14
STR R7 R8
ADD R6 R6 R14
IMM R11 .Append
BRE R11 R0 R0

.Append_Expand
PSH R1
IMM R11 16
ADD R2 R2 R11
MOV R1 R2
SCAL REALLOC R1
IMM R11 .Append_Expand_Ret
BGE R11 R0 R0

.Delete

ADD R9 R3 R1

SUB R7 R6 R5
SUB R3 R3 R7
SUB R3 R3 R14

ADD R7 R5 R1
ADD R8 R6 R1
ADD R8 R8 R14


IMM R11 .Delete_Loop1
IMM R13 .Delete_Loop1_End
.Delete_Loop1
BGE R13 R8 R9
LOD R10 R8
STR R8 R0
STR R7 R10
ADD R8 R8 R14
ADD R7 R7 R14
BGE R11 R0 R0
.Delete_Loop1_End
IMM R13 .Delete_Loop2
ADD R8 R6 R1
ADD R8 R8 R14
.Delete_Loop2
BGE R12 R7 R8
STR R7 R0
ADD R7 R7 R14
BGE R13 R0 R0

.ForceQuit
POP R0
PSH R0
.Quit
//Free all
MOV R5 R1
ADD R7 R3 R1
IMM R13 .QuitQuit
IMM R11 .QuitLoop
//check if edit
POP R8
PSH R8
BRE R11 R8 R0
IMM R11 .Error
BGE R11 R0 R0
.QuitLoop
BGE R13 R5 R7
LOD R8 R5
SCAL FREE R8
ADD R5 R5 R14
BGE R11 R0 R0
.QuitQuit
SCAL FREE R1
SCAL FREE R4
SCAL EXIT R0

.Error
SCAL PUTCI '?'
SCAL PUTCI '\n'
PSH R0
SCAL STROSVAR ERROR
BGE R12 R0 R0
